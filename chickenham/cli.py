from time import sleep

from termcolor import colored


def greeting():
    """Generated by figlet"""
    print(r"       ___          _        _   ")
    print(r"      | _ \_ _ ___ (_)___ __| |_ ")
    print(r"      |  _/ '_/ _ \| / -_) _|  _|")
    print(r"      |_| |_| \___// \___\__|\__|")
    print(r"  ___ _    _    _ |__/       _  _ ")
    print(r" / __| |_ (_)__| |_____ _ _ | || |__ _ _ __  ")
    print(r"| (__| ' \| / _| / / -_) ' \| __ / _` | '  \ ")
    print(r" \___|_||_|_\__|_\_\___|_||_|_||_\__,_|_|_|_|")
    print("")


def notify_until(function, message, color="red", interval=5):
    while not function():
        if not function():
            print("\b" * len(message) +
                  colored(message, color),
                  end="",
                  flush=True)
            sleep(interval)


def clear_screen():
    print(chr(27) + "[2J" + chr(27) + "[H")


def spinner_notify_while(function, message, color="blue", interval=1,
                         spinner=["\u25f4 ", "\u25f7 ", "\u25f6 ", "\u25f5 "]):
    if not spinner:
        spinner = [" "]

    print("{}  {}".format(" "*len(spinner[0]), colored(message, color)),
          end="", flush=True)
    index = 0
    while function():
        index += 1
        if index >= len(spinner):
            index = 0
        print("{}{}  {}".format("\b"*(len(spinner[1])+2+len(message)),
                                spinner[index], colored(message, color)),
              end="", flush=True)
        sleep(interval)
    print()
